/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Classes.Group;
import Classes.User;
import static GUI.InvitationDialog.client;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.awt.Container;
import java.awt.GridBagLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import org.bson.Document;


public class InvitationPanel extends javax.swing.JPanel {
    User currentUser; 
    String currentGroupName;
    MongoClient client;
    
    public InvitationPanel(User currentUser, String currentGroupName, MongoClient client) {
        initComponents();
        this.currentUser = currentUser;
        this.currentGroupName = currentGroupName;
        this.client = client;        

        groupName.setText(currentGroupName);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupName = new javax.swing.JLabel();
        acept = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(248, 248, 248));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        groupName.setText("name");

        acept.setBackground(new java.awt.Color(252, 252, 252));
        acept.setText("Aceptar");
        acept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptActionPerformed(evt);
            }
        });

        jLabel1.setText("Fuiste invitado por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(groupName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(acept)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(groupName)
                .addGap(27, 27, 27)
                .addComponent(acept)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void aceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptActionPerformed
        MongoDatabase dataBase = client.getDatabase("cowork");
        MongoCollection users = dataBase.getCollection("users");
        MongoCollection groups = dataBase.getCollection("groups");

        Document queryGroup = new Document("nameGroup", currentGroupName);
        Document groupResult = (Document) groups.find(queryGroup).first();
        
        Document queryUser = new Document("name", currentUser.getName());
        Document userResult = (Document) users.find(queryUser).first();
        
        ArrayList<String> invitations = (ArrayList) userResult.get("invitations");
        for (int i = 0; i < invitations.size(); i++) {
            String invitation = invitations.get(i);            
            if(invitation.equals(currentGroupName)){
                invitations.remove(i);
            }
        }
        
        ArrayList<Document> members = (ArrayList<Document>) groupResult.get("members");
        members.add(userResult);
        
        Document updateGroup = new Document("$set", new Document("members", members));
        Document updateUser = new Document("$set", new Document("invitations", invitations));
        
        groups.updateOne(queryGroup, updateGroup);
        users.updateOne(queryUser, updateUser);
        
        Container panel = acept.getParent().getParent();
        panel.remove(this);
        panel.revalidate();
        panel.repaint();
        
        
        
        
    }//GEN-LAST:event_aceptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acept;
    private javax.swing.JLabel groupName;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
