/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.JPanels;

import Classes.Group;
import Classes.User;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;
import org.bson.Document;

/**
 *
 * @author mairo
 */
public class ShowGroups extends javax.swing.JPanel {
    User currentUser;
    MongoClient client;
   
    public ShowGroups(User currentUser, MongoClient client) {
        initComponents();
        setLayout(new GridBagLayout());
        this.currentUser = currentUser;
        this.client = client;
                        
        initGroups();
    }
    
    private void initGroups(){
        MongoDatabase dataBase = client.getDatabase("cowork");
        MongoCollection groups = dataBase.getCollection("groups");
        
        ArrayList<Group> userGroups = new ArrayList();        
        FindIterable<Document> docs = groups.find();
        
        for(Document doc: docs){
            ArrayList<Document> auxMembers = (ArrayList) doc.get("members"); 
            
            for(Document auxMember: auxMembers){
                String auxEmail = (String) auxMember.get("email");
                
                if(auxEmail.equals(currentUser.getEmail())){
                    String nameGroupAux = (String) doc.get("nameGroup");
                    String leaderAux = (String) doc.get("leader");
                    ArrayList membersAux = (ArrayList) doc.get("members");
                    ArrayList tasksAux = (ArrayList) doc.get("tasks");
                    String colorStr = (String) doc.get("colorGroup");
                    Color colorGroupAux = null;
                    
                    System.out.println(nameGroupAux);
                    switch(colorStr.replace(" ", "")){
                        case "Rojo":                            
                            colorGroupAux = Color.red;
                            break;
                        
                        case "Naranja":
                            colorGroupAux = Color.orange;
                            break;
                            
                        case "Amarillo":
                            colorGroupAux = Color.yellow;
                            break;
                            
                        case "Verde":
                            colorGroupAux = Color.green;
                            break;
                            
                        case "Azul":
                            colorGroupAux = Color.blue;
                            break;
                            
                        case "Morado":
                            colorGroupAux = new Color(204, 0, 204);
                            break;
                    }
                    
                    
                    Group auxGroup = new Group(nameGroupAux, leaderAux, membersAux, tasksAux, colorGroupAux);
                    
                    userGroups.add(auxGroup);
                    break;
                }
            }
        }
        
        int i = 0;
        for(Group group: userGroups){
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.fill = GridBagConstraints.BOTH; 
            gbc.insets = new Insets(5, 5, 5, 5); 
            
            JPanel panel = createGroupPanel(group);
            gbc.gridx = i % 4; 
            gbc.gridy = i / 4;
            add(panel, gbc);
            i++;
        }
        
        
        
        
    }
    
    private JPanel createGroupPanel(Group group) {
        GroupPanel panel = new GroupPanel(currentUser, group, client);
        return panel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
